apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs"


def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries
def testLibs = rootProject.ext.testingLibraries

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.diegoferreiracaetano.github"
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
    sourceSets {
        test.java.srcDirs 'src/testUtils/java'
        androidTest.java.srcDirs 'src/testUtils/java'
    }
}


configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$libs.supportLibrary"
    implementation "androidx.recyclerview:recyclerview:$libs.recyclerview"
    implementation "androidx.constraintlayout:constraintlayout:$libs.constraintlayout"
    implementation "androidx.cardview:cardview:$libs.cardView"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$libs.swipe"
    implementation "com.google.android.material:material:$libs.materialVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$libs.extensions"
    implementation "org.koin:koin-androidx-viewmodel:$libs.koin"
    implementation "io.reactivex.rxjava2:rxkotlin:$libs.rxkotlin"
    implementation "io.reactivex.rxjava2:rxandroid:$libs.rxandroid"
    implementation "com.github.bumptech.glide:glide:$libs.glide"
    implementation "androidx.paging:paging-runtime:$libs.paging"
    implementation "android.arch.navigation:navigation-fragment-ktx:$libs.nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$libs.nav_version"
    implementation "android.arch.navigation:navigation-fragment:$libs.nav_version"
    implementation "de.hdodenhof:circleimageview:$libs.circleImage"
    implementation "androidx.room:room-rxjava2:$libs.room"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$libs.retrofitRx"
    implementation "com.squareup.retrofit2:converter-gson:$libs.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$libs.okhttp"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$libs.okhttpUrlconnection"
    implementation "com.squareup.okhttp3:logging-interceptor:$libs.loggingInterceptor"
    implementation "com.squareup.okhttp3:mockwebserver:$libs.okhttp"

    kapt "androidx.room:room-compiler:$libs.room"
    ktlint "com.github.shyiko:ktlint:$libs.ktlint"

    testImplementation "junit:junit:$testLibs.junitExt"
    testImplementation "androidx.arch.core:core-testing:$libs.extensions"
    testImplementation "org.koin:koin-test:$testLibs.koin"
    testImplementation "androidx.paging:paging-common:$libs.paging"

    androidTestImplementation "org.koin:koin-test:$testLibs.koin"
    androidTestImplementation "androidx.test:rules:$testLibs.rules"
    androidTestImplementation "androidx.test:runner:$testLibs.runner"
    androidTestImplementation "androidx.test.ext:junit:$testLibs.junitExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testLibs.espresso"
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:$testLibs.espresso") {
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }

    api project(path: ':data')
    api project(path: ':domain')

}
